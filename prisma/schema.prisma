// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Todos {
  
  id    Int     @id @default(autoincrement())
  
  title String
  
  completed Boolean
  
}

model Flight {
  id Int @id @default(autoincrement()) // primary key
  name String
  from String 
  to String
  date DateTime
  price Decimal
  desc String?
  picString String?
  picBlob Bytes?

  bookings Booking[] 
}


model Booking {
  id Int @id @default(autoincrement())
  email String // should relate to a User or Account
  children Int?
  adults Int

  booked DateTime @default(now())

  // relation to Flight
  flight Flight @relation(fields: [flightId], references: [id] , onDelete: Cascade)
  flightId Int // foreign key
}


model message {
  id Int @id @default(autoincrement())
  firstName String
  lastName String
  phone String
  email String
  message String
  date DateTime @default(now())
}



model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?  
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade) 

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  expires      DateTime
  userId       String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  role          Int       @default(0)
  image         String?
  accounts      Account[]
  sessions      Session[]
}


model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
} 


